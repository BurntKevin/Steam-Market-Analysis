{"ast":null,"code":"import _slicedToArray from \"C:\\\\Users\\\\Manrith\\\\Documents\\\\GitHub\\\\Steam-Market-Analysis\\\\Steam-Market-Analysis\\\\front_end\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\Manrith\\\\Documents\\\\GitHub\\\\Steam-Market-Analysis\\\\Steam-Market-Analysis\\\\front_end\\\\src\\\\components\\\\GameForm.js\";\nimport React, { useState } from \"react\";\nimport { Form, Input, Button } from \"semantic-ui-react\";\nexport const GameForm = ({\n  onNewGame\n}) => {\n  const _useState = useState(\"\"),\n        _useState2 = _slicedToArray(_useState, 2),\n        title = _useState2[0],\n        setTitle = _useState2[1];\n\n  return React.createElement(Form, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 8\n    },\n    __self: this\n  }, React.createElement(Form.Field, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9\n    },\n    __self: this\n  }, React.createElement(Input, {\n    placeholder: \"game id\",\n    value: title,\n    onChange: e => setTitle(e.target.value),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10\n    },\n    __self: this\n  })), React.createElement(Form.Field, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16\n    },\n    __self: this\n  }, React.createElement(Button, {\n    onClick: async () => {\n      const game = {\n        game_id\n      };\n      const response = await fetch(\"/add_game\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify(game)\n      });\n\n      if (response.ok) {\n        console.log(\"response worked!\");\n        onNewGame(game);\n        setTitle(\"\");\n      }\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17\n    },\n    __self: this\n  }, \"submit\")));\n};","map":{"version":3,"sources":["C:/Users/Manrith/Documents/GitHub/Steam-Market-Analysis/Steam-Market-Analysis/front_end/src/components/GameForm.js"],"names":["React","useState","Form","Input","Button","GameForm","onNewGame","title","setTitle","e","target","value","game","game_id","response","fetch","method","headers","body","JSON","stringify","ok","console","log"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,IAAT,EAAeC,KAAf,EAAuBC,MAAvB,QAAqC,mBAArC;AAEA,OAAO,MAAMC,QAAQ,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAmB;AAAA,oBACfL,QAAQ,CAAC,EAAD,CADO;AAAA;AAAA,QAClCM,KADkC;AAAA,QAC3BC,QAD2B;;AAGzC,SACE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,KAAD;AACE,IAAA,WAAW,EAAC,SADd;AAEE,IAAA,KAAK,EAAED,KAFT;AAGE,IAAA,QAAQ,EAAEE,CAAC,IAAID,QAAQ,CAACC,CAAC,CAACC,MAAF,CAASC,KAAV,CAHzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF,EAQE,oBAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,MAAD;AACE,IAAA,OAAO,EAAE,YAAY;AACnB,YAAMC,IAAI,GAAG;AAAEC,QAAAA;AAAF,OAAb;AACA,YAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,WAAD,EAAc;AACxCC,QAAAA,MAAM,EAAE,MADgC;AAExCC,QAAAA,OAAO,EAAE;AACP,0BAAgB;AADT,SAF+B;AAKxCC,QAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeR,IAAf;AALkC,OAAd,CAA5B;;AAQA,UAAIE,QAAQ,CAACO,EAAb,EAAiB;AACfC,QAAAA,OAAO,CAACC,GAAR,CAAY,kBAAZ;AACAjB,QAAAA,SAAS,CAACM,IAAD,CAAT;AACAJ,QAAAA,QAAQ,CAAC,EAAD,CAAR;AACD;AACF,KAhBH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,CARF,CADF;AAiCD,CApCM","sourcesContent":["import React, { useState } from \"react\";\nimport { Form, Input,  Button } from \"semantic-ui-react\";\n\nexport const GameForm = ({ onNewGame }) => {\n  const [title, setTitle] = useState(\"\");\n\n  return (\n    <Form>\n      <Form.Field>\n        <Input\n          placeholder=\"game id\"\n          value={title}\n          onChange={e => setTitle(e.target.value)}\n        />\n      </Form.Field>\n      <Form.Field>\n        <Button\n          onClick={async () => {\n            const game = { game_id };\n            const response = await fetch(\"/add_game\", {\n              method: \"POST\",\n              headers: {\n                \"Content-Type\": \"application/json\"\n              },\n              body: JSON.stringify(game)\n            });\n\n            if (response.ok) {\n              console.log(\"response worked!\");\n              onNewGame(game);\n              setTitle(\"\");\n            }\n          }}\n        >\n          submit\n        </Button>\n      </Form.Field>\n    </Form>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}