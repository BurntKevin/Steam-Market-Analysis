{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Manrith\\\\Documents\\\\GitHub\\\\Steam-Market-Analysis\\\\Steam-Market-Analysis\\\\front_end\\\\src\\\\components\\\\ViewItemPriceChartAnalysis.js\";\n\nclass ApexChart extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      series: [{\n        data: data\n      }],\n      options: {\n        chart: {\n          id: 'chart2',\n          type: 'line',\n          height: 230,\n          toolbar: {\n            autoSelected: 'pan',\n            show: false\n          }\n        },\n        colors: ['#546E7A'],\n        stroke: {\n          width: 3\n        },\n        dataLabels: {\n          enabled: false\n        },\n        fill: {\n          opacity: 1\n        },\n        markers: {\n          size: 0\n        },\n        xaxis: {\n          type: 'datetime'\n        }\n      },\n      seriesLine: [{\n        data: data\n      }],\n      optionsLine: {\n        chart: {\n          id: 'chart1',\n          height: 130,\n          type: 'area',\n          brush: {\n            target: 'chart2',\n            enabled: true\n          },\n          selection: {\n            enabled: true,\n            xaxis: {\n              min: new Date('19 Jun 2017').getTime(),\n              max: new Date('14 Aug 2017').getTime()\n            }\n          }\n        },\n        colors: ['#008FFB'],\n        fill: {\n          type: 'gradient',\n          gradient: {\n            opacityFrom: 0.91,\n            opacityTo: 0.1\n          }\n        },\n        xaxis: {\n          type: 'datetime',\n          tooltip: {\n            enabled: false\n          }\n        },\n        yaxis: {\n          tickAmount: 2\n        }\n      }\n    };\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      id: \"wrapper\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      id: \"chart-line2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    }, React.createElement(ReactApexChart, {\n      options: this.state.options,\n      series: this.state.series,\n      type: \"line\",\n      height: 230,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      id: \"chart-line\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    }, React.createElement(ReactApexChart, {\n      options: this.state.optionsLine,\n      series: this.state.seriesLine,\n      type: \"area\",\n      height: 130,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    })));\n  }\n\n}\n\nconst domContainer = document.querySelector('#app');\nReactDOM.render(React.createElement(ApexChart), domContainer); // import React, { useEffect, useState } from \"react\";\n// import { Card, Image, List, Header, Icon, Label, Menu, Table, Pagination} from \"semantic-ui-react\";\n// import axios from 'axios';\n// import ApexCharts from 'apexcharts'\n// export const ViewItemPriceChartAnalysis = ({ item_name }) => {\n//   const [priceHistory, setPriceHistory] = useState([]);\n//   useEffect(() => {\n//     axios\n//     .get(\"/view_item_price_history\", {\n//       params: {\n//         item_name,\n//       },\n//     })\n//     .then(({ data }) => {\n//       setPriceHistory(data.price_history);\n//     })\n//   }, []);\n//   return (\n//     <Table celled>\n//       <Table.Header>\n//         <Table.Row>\n//           <Table.HeaderCell>Date</Table.HeaderCell>\n//           <Table.HeaderCell>Price</Table.HeaderCell>\n//           <Table.HeaderCell>Volume</Table.HeaderCell>\n//         </Table.Row>\n//       </Table.Header>\n//       <Table.Body>\n//         {priceHistory.map(priceHistoryPoint => {\n//           console.log(priceHistoryPoint)\n//           return (\n//             <Table.Row>\n//               <Table.Cell>{priceHistoryPoint.price_history_point_date}</Table.Cell>\n//               <Table.Cell>{priceHistoryPoint.price_history_point_price}</Table.Cell>\n//               <Table.Cell>{priceHistoryPoint.price_history_point_volume}</Table.Cell>\n//             </Table.Row>\n//           )\n//         })}\n//       </Table.Body>\n//     </Table>\n//   );\n// };\n// export default ViewItemPriceChartAnalysis;","map":{"version":3,"sources":["C:/Users/Manrith/Documents/GitHub/Steam-Market-Analysis/Steam-Market-Analysis/front_end/src/components/ViewItemPriceChartAnalysis.js"],"names":["ApexChart","React","Component","constructor","props","state","series","data","options","chart","id","type","height","toolbar","autoSelected","show","colors","stroke","width","dataLabels","enabled","fill","opacity","markers","size","xaxis","seriesLine","optionsLine","brush","target","selection","min","Date","getTime","max","gradient","opacityFrom","opacityTo","tooltip","yaxis","tickAmount","render","domContainer","document","querySelector","ReactDOM","createElement"],"mappings":"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","sourcesContent":["\r\n      class ApexChart extends React.Component {\r\n        constructor(props) {\r\n          super(props);\r\n\r\n          this.state = {\r\n          \r\n            series: [{\r\n              data: data\r\n            }],\r\n            options: {\r\n              chart: {\r\n                id: 'chart2',\r\n                type: 'line',\r\n                height: 230,\r\n                toolbar: {\r\n                  autoSelected: 'pan',\r\n                  show: false\r\n                }\r\n              },\r\n              colors: ['#546E7A'],\r\n              stroke: {\r\n                width: 3\r\n              },\r\n              dataLabels: {\r\n                enabled: false\r\n              },\r\n              fill: {\r\n                opacity: 1,\r\n              },\r\n              markers: {\r\n                size: 0\r\n              },\r\n              xaxis: {\r\n                type: 'datetime'\r\n              }\r\n            },\r\n          \r\n            seriesLine: [{\r\n              data: data\r\n            }],\r\n            optionsLine: {\r\n              chart: {\r\n                id: 'chart1',\r\n                height: 130,\r\n                type: 'area',\r\n                brush:{\r\n                  target: 'chart2',\r\n                  enabled: true\r\n                },\r\n                selection: {\r\n                  enabled: true,\r\n                  xaxis: {\r\n                    min: new Date('19 Jun 2017').getTime(),\r\n                    max: new Date('14 Aug 2017').getTime()\r\n                  }\r\n                },\r\n              },\r\n              colors: ['#008FFB'],\r\n              fill: {\r\n                type: 'gradient',\r\n                gradient: {\r\n                  opacityFrom: 0.91,\r\n                  opacityTo: 0.1,\r\n                }\r\n              },\r\n              xaxis: {\r\n                type: 'datetime',\r\n                tooltip: {\r\n                  enabled: false\r\n                }\r\n              },\r\n              yaxis: {\r\n                tickAmount: 2\r\n              }\r\n            },\r\n          \r\n          \r\n          };\r\n        }\r\n\r\n      \r\n\r\n        render() {\r\n          return (\r\n            <div id=\"wrapper\">\r\n              <div id=\"chart-line2\">\r\n              <ReactApexChart options={this.state.options} series={this.state.series} type=\"line\" height={230} />\r\n            </div>\r\n              <div id=\"chart-line\">\r\n              <ReactApexChart options={this.state.optionsLine} series={this.state.seriesLine} type=\"area\" height={130} />\r\n            </div>\r\n            </div>\r\n          );\r\n        }\r\n      }\r\n\r\n      const domContainer = document.querySelector('#app');\r\n      ReactDOM.render(React.createElement(ApexChart), domContainer);\r\n          \r\n\r\n// import React, { useEffect, useState } from \"react\";\r\n// import { Card, Image, List, Header, Icon, Label, Menu, Table, Pagination} from \"semantic-ui-react\";\r\n// import axios from 'axios';\r\n// import ApexCharts from 'apexcharts'\r\n\r\n// export const ViewItemPriceChartAnalysis = ({ item_name }) => {\r\n//   const [priceHistory, setPriceHistory] = useState([]);\r\n\r\n//   useEffect(() => {\r\n//     axios\r\n//     .get(\"/view_item_price_history\", {\r\n//       params: {\r\n//         item_name,\r\n//       },\r\n//     })\r\n//     .then(({ data }) => {\r\n//       setPriceHistory(data.price_history);\r\n//     })\r\n//   }, []);\r\n\r\n//   return (\r\n//     <Table celled>\r\n//       <Table.Header>\r\n//         <Table.Row>\r\n//           <Table.HeaderCell>Date</Table.HeaderCell>\r\n//           <Table.HeaderCell>Price</Table.HeaderCell>\r\n//           <Table.HeaderCell>Volume</Table.HeaderCell>\r\n//         </Table.Row>\r\n//       </Table.Header>\r\n\r\n//       <Table.Body>\r\n//         {priceHistory.map(priceHistoryPoint => {\r\n//           console.log(priceHistoryPoint)\r\n//           return (\r\n//             <Table.Row>\r\n//               <Table.Cell>{priceHistoryPoint.price_history_point_date}</Table.Cell>\r\n//               <Table.Cell>{priceHistoryPoint.price_history_point_price}</Table.Cell>\r\n//               <Table.Cell>{priceHistoryPoint.price_history_point_volume}</Table.Cell>\r\n//             </Table.Row>\r\n//           )\r\n//         })}\r\n//       </Table.Body>\r\n//     </Table>\r\n//   );\r\n// };\r\n\r\n// export default ViewItemPriceChartAnalysis;\r\n"]},"metadata":{},"sourceType":"module"}